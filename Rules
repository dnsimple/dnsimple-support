#!/usr/bin/env ruby

# A few helpful tips about the Rules file:
#
# * The string given to #compile and #route are matching patterns for
#   identifiers--not for paths. Therefore, you can’t match on extension.
#
# * The order of rules is important: for each item, only the first matching
#   rule is applied.
#
# * Item identifiers start and end with a slash (e.g. “/about/” for the file
#   “content/about.html”). To select all children, grandchildren, … of an
#   item, use the pattern “/about/*/”; “/about/*” will also select the parent,
#   because “*” matches zero or more characters.


preprocess do
  create_category_pages
end

postprocess do
  create_search_index
end

compile '/assets/css/**/*' do
  if item.identifier.to_s =~ %r{/_\w+\.scss$}
    # don't compile partials
  else
    filter :dart_sass, :syntax => :scss, :style => :compressed
    filter :relativize_paths, type: :css
  end
end

compile '/sitemap.*' do
  filter :erb
end

compile '/robots.*' do
  filter :erb
end

compile '/**/*.html' do
  filter :erb
  layout '/default.*'
end

compile '/**/*.md' do
  filter :erb
  filter :preprocess
  filter :kramdown, toc_levels: [2], syntax_highlighter: nil, input: "GFM"
  filter :colorize_syntax, default_colorizer: :rouge
  filter :postprocess
  layout '/default.*'
  filter :add_structured_data
end

compile '/**/*' do
  write item.identifier.to_s
end


route '/assets/css/**/*' do
  if item.identifier.to_s =~ %r{/_\w+\.scss$}
    # don't route partials
  else
    item.identifier.without_ext + '.css'
  end
end

route '/assets/**/*' do
  item.identifier.chop + '.' + item[:extension]
end

route '/files/**/*' do
  item.identifier.chop + '.' + item[:extension]
end

route '/sitemap.*' do
  item.identifier.without_ext
end

route '/robots.*' do
  item.identifier.without_ext
end

route '/**/*.{html,md}' do
  if item.identifier =~ '/index.*'
    '/index.html'
  else
    item.identifier.without_ext + '/index.html'
  end
end


layout '/**/*', :erb
